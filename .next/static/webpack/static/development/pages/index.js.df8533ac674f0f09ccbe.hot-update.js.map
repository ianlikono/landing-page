{"version":3,"file":"static/webpack/static/development/pages/index.js.df8533ac674f0f09ccbe.hot-update.js","sources":["webpack:///./components/sections/Header/Header.tsx"],"sourcesContent":["import Fab from \"@material-ui/core/Fab\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { unstable_useMediaQuery as useMediaQuery } from \"@material-ui/core/useMediaQuery\";\nimport React, { useRef, useState } from \"react\";\nimport Dialog from \"../Dialog/Dialog\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nimport {\n  ButtonText,\n  ContentWrapper,\n  FormHeader,\n  FormHeaderParagraph,\n  FormInput,\n  FormWrapper,\n  HeaderH1,\n  Logo,\n  MainWrapper,\n  SecondaryParagraph,\n  SecondaryText,\n  Sections,\n  Wrapper,\n  Error\n} from \"./headerStyles\";\nimport validateEmail from \"../../../utils/validateEmail\";\n\nconst userSignUp = gql`\n  mutation createUsersTable($createuserstableinput: CreateUsersTableInput!) {\n    createUsersTable(input: $createuserstableinput) {\n      id\n      name\n      email\n    }\n  }\n`;\n\ntype Props = {\n  classes: any;\n};\nconst styles = theme => ({\n  margin: {\n    margin: theme.spacing.unit\n  }\n});\n\nconst Header: React.FunctionComponent<Props> = props => {\n  const { classes } = props;\n  const matches = useMediaQuery(\"(min-width:1220.5px)\");\n  const nameInput = useRef(null);\n  const [emailError, setEmailError] = useState(false);\n  const [nameError, setNameError] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const onRefButtonClicked = () => {\n    nameInput.current.focus();\n  };\n  const onSignUpClicked = async sgnUpUser => {\n    if (name.length <= 0) {\n      setNameError(true);\n    } else if (email.length <= 0) {\n      setEmailError(true);\n    } else {\n      const response = await sgnUpUser({\n        variables: {\n          createuserstableinput: {\n            name: name,\n            email: email\n          }\n        }\n      });\n      setModalOpen(true);\n      setEmail(\"\");\n      setName(\"\");\n    }\n  };\n\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n\n  const onBlurEmail = () => {\n    const valid = validateEmail(email);\n    if (!valid) {\n      setEmailError(true);\n    }\n  };\n\n  const onEmailInputChange = e => {\n    setEmailError(false);\n    setEmail(e.target.value);\n    const valid = validateEmail(email);\n    if (!valid) {\n      setEmailError(true);\n    }\n  };\n\n  const onNameInputChange = e => {\n    setNameError(false);\n    setName(e.target.value);\n  };\n  return (\n    <MainWrapper>\n      <Wrapper>\n        <Logo />\n        <Sections>\n          <ContentWrapper>\n            <HeaderH1>ECOMMERCE REIMAGINED!</HeaderH1>\n            <SecondaryText>\n              <SecondaryParagraph>\n                Start your online business free with no capital or risk\n                investment and make your dreams come true.\n              </SecondaryParagraph>\n            </SecondaryText>\n            {matches ? (\n              <>\n                <div role=\"button\" onClick={onRefButtonClicked}>\n                  <Fab\n                    variant=\"extended\"\n                    color=\"primary\"\n                    aria-label=\"Add\"\n                    className={classes.margin}\n                  >\n                    <ButtonText>Sign Up For Preview</ButtonText>\n                  </Fab>\n                </div>\n              </>\n            ) : null}\n          </ContentWrapper>\n          <div>\n            <Mutation mutation={userSignUp}>\n              {(sgnUpUser, { loading, error }) => (\n                <FormWrapper>\n                  <FormHeader>\n                    <FormHeaderParagraph>\n                      It's Free For Life!!! Sign Up today and get notified once\n                      we launch!\n                    </FormHeaderParagraph>\n                  </FormHeader>\n                  <FormInput\n                    onChange={e => onNameInputChange(e)}\n                    value={name}\n                    name=\"name\"\n                    ref={nameInput}\n                    placeholder=\"Enter Name\"\n                  />\n                  {nameError ? <Error>Please Enter your Name</Error> : null}\n                  <FormInput\n                    onChange={e => onEmailInputChange(e)}\n                    value={email}\n                    name=\"email\"\n                    onBlur={onBlurEmail}\n                    error={emailError}\n                    placeholder=\"Enter Email Address\"\n                  />\n                  {emailError ? (\n                    <Error>Please Enter a Valid Email</Error>\n                  ) : null}\n                  <>\n                    <div\n                      role=\"button\"\n                      onClick={() => onSignUpClicked(sgnUpUser)}\n                    >\n                      <Fab\n                        disabled={loading}\n                        variant=\"extended\"\n                        color=\"primary\"\n                        aria-label=\"Add\"\n                        className={classes.margin}\n                      >\n                        <ButtonText>Sign Up for preview</ButtonText>\n                      </Fab>\n                      <Dialog open={modalOpen} close={closeModal} />\n                    </div>\n                  </>\n                </FormWrapper>\n              )}\n            </Mutation>\n          </div>\n        </Sections>\n      </Wrapper>\n    </MainWrapper>\n  );\n};\nexport default withStyles(styles)(Header);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAgBA;AAEA;AACA;AAYA;AAAA;AACA;AACA;AADA;AADA;AAAA;AACA;AAKA;AAAA;AAEA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAJA;AAAA;AACA;AADA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAFA;AADA;AADA;AACA;AAPA;AAMA;AAQA;AACA;AACA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAzCA;AAoDA;AACA;AAAA;;;;A","sourceRoot":""}