{"version":3,"file":"static/webpack/static/development/pages/index.js.b7aa571d1eb16e0bd6cd.hot-update.js","sources":["webpack:///./components/sections/footer/Footer.tsx"],"sourcesContent":["import Fab from \"@material-ui/core/Fab\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport React, { useState } from \"react\";\nimport Dialog from \"../Dialog/Dialog\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport {\n  ButtonText,\n  CopyRight,\n  FormHeader,\n  FormHeaderParagraph,\n  FormInput,\n  FormWrapper,\n  MainWrapper,\n  Wrapper\n} from \"./style\";\nimport validateEmail from \"../../../utils/validateEmail\";\n\ntype Props = {\n  classes: any;\n};\n\nconst styles = theme => ({\n  margin: {\n    margin: theme.spacing.unit\n  }\n});\n\nconst userSignUp = gql`\n  mutation createUsersTable($createuserstableinput: CreateUsersTableInput!) {\n    createUsersTable(input: $createuserstableinput) {\n      id\n      name\n      email\n    }\n  }\n`;\n\nconst Footer: React.FunctionComponent<Props> = props => {\n  const { classes } = props;\n  const [emailError, setEmailError] = useState(false);\n  const [nameError, setNameError] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const onSignUpClicked = async sgnUpUser => {\n    if (name.length <= 0) {\n      setNameError(true);\n    } else if (email.length <= 0) {\n      setEmailError(true);\n    } else {\n      const valid = validateEmail(email);\n      if (valid) {\n        const response = await sgnUpUser({\n          variables: {\n            createuserstableinput: {\n              name: name,\n              email: email\n            }\n          }\n        });\n        setModalOpen(true);\n        setEmail(\"\");\n        setName(\"\");\n      }\n    }\n  };\n\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n\n  const onBlurEmail = () => {\n    const valid = validateEmail(email);\n    if (!valid) {\n      setEmailError(true);\n    }\n  };\n\n  const onEmailInputChange = e => {\n    setEmailError(false);\n    setEmail(e.target.value);\n  };\n\n  const onNameInputChange = e => {\n    setNameError(false);\n    setName(e.target.value);\n  };\n\n  return (\n    <MainWrapper>\n      <Wrapper>\n        <Mutation mutation={userSignUp}>\n          {(sgnUpUser, { loading, error }) => (\n            <FormWrapper>\n              <FormHeader>\n                <FormHeaderParagraph>\n                  It's Free For Life!!! Sign Up today and get notified once we\n                  launch!\n                </FormHeaderParagraph>\n              </FormHeader>\n              <FormInput\n                onChange={e => onNameInputChange(e)}\n                value={name}\n                name=\"name\"\n                placeholder=\"Enter Name\"\n              />\n              {nameError ? <Error>Please Enter your Name</Error> : null}\n              <FormInput\n                onChange={e => onEmailInputChange(e)}\n                value={email}\n                name=\"email\"\n                onBlur={onBlurEmail}\n                error={emailError}\n                placeholder=\"Enter Email Address\"\n              />\n              {emailError ? <Error>Please Enter a Valid Email</Error> : null}\n              <>\n                <div role=\"button\" onClick={() => onSignUpClicked(sgnUpUser)}>\n                  <Fab\n                    disabled={loading}\n                    variant=\"extended\"\n                    color=\"primary\"\n                    aria-label=\"Add\"\n                    className={classes.margin}\n                  >\n                    <ButtonText>Sign Up for preview</ButtonText>\n                  </Fab>\n                  <Dialog open={modalOpen} close={closeModal} />\n                </div>\n              </>\n            </FormWrapper>\n          )}\n        </Mutation>\n        <CopyRight>&copy;agoraexpo 2019</CopyRight>\n      </Wrapper>\n    </MainWrapper>\n  );\n};\n\nexport default withStyles(styles)(Footer);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AACA;AAKA;AAAA;AACA;AACA;AADA;AADA;AAAA;AACA;AAKA;AACA;AASA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAJA;AAAA;AACA;AADA;AAMA;AACA;AAPA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AASA;AACA;AACA;AACA;AAFA;AADA;AADA;AACA;AATA;AAQA;AAQA;AACA;AACA;AACA;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnCA;AAyCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}